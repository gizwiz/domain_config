package views

import (
	"strconv"

	"github.com/gizwiz/domain_config/models"
)

templ PropertiesPage(propertyValues []models.PropertyValue, keyFilter string, modifiedOnly bool, allTags []models.Tag,  isSelectedTag models.StringPredicate) {
	<html>
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			@style()
			@scripts()
		</head>
		<body>
			@properties(propertyValues, keyFilter, modifiedOnly, allTags, isSelectedTag)
		</body>
	</html>
}

templ properties(data []models.PropertyValue, keyFilter string, modifiedOnly bool, allTags []models.Tag, isSelectedTag models.StringPredicate) {
	@helpScreen()
	<div>
		<h2>Filter</h2>
		@propertyFilterForm(keyFilter, modifiedOnly, allTags, isSelectedTag)
	</div>
	<div id="new_property" style="display:none;">
		<h2>Add new property</h2>
		@propertyEditForm(allTags)
	</div>
	<div>
		<h2>Properties</h2>
		@propertyList(data)
	</div>
}

templ propertyFilterForm(keyFilter string, isModifiedOnly bool, allTags []models.Tag, isSelectedTag models.StringPredicate) {
	<form id="propertyFilterForm" action="/properties" method="get">
		<div class="form-group-container">
			<div class="form-group">
				<label for="keyFilter">Key Filter</label>
				<input type="text" id="filterInput" name="keyFilter" value={ keyFilter }/>
			</div>
			<div class="form-group checkbox-group">
				<input type="hidden" id="modifiedOnly" name="modifiedOnly" value="false"/>
				<input
					type="checkbox"
					id="modifiedOnlyCheckbox"
					value="{isModifiedOnly}"
					if isModifiedOnly {
						checked
					}
				/>
				<label for="modifiedOnlyCheckbox">Modified Only</label>
			</div>
		</div>
		<div class="form-group tags-select">
			<label for="selectedTags">Tags</label>
			<select id="selectedTags" name="selectedTags" multiple>
				for _, tag := range allTags {
					<option
						value={ strconv.Itoa(tag.ID) }
						if isSelectedTag( strconv.Itoa(tag.ID)) {
							selected
						}
					>{ tag.Tag }</option>
				}
			</select>
		</div>
	</form>
}

templ propertyEditForm(allTags []models.Tag) {
	<form id="editForm" method="post" style="display: none;">
		<input type="hidden" id="editMode" name="mode" value="update"/>
		<input type="hidden" id="editID" name="id" value="1"/>
		<div class="form-row">
			<label for="editKey">Key:</label>
			<input type="text" id="editKey" name="key" value="" placeholder="The key should be unique, so prefix with the component name!"/>
		</div>
		<div class="form-row">
			<label for="editDescription">Description:</label>
			<input type="text" id="editDescription" name="description" placeholder="Put a clear description here"/>
		</div>
		<div class="form-row">
			<label for="editDefaultValue">Default Value:</label>
			<input type="text" id="editDefaultValue" name="defaultValue" placeholder="put a constant, or start with = for a formula"/>
		</div>
		<div class="form-row tags-select">
			<label for="editPropertyTags">Property Tags</label>
			<select id="editPropertyTags" name="propertyTags" multiple>
				for _, tag := range allTags {
					<option value={ strconv.Itoa(tag.ID) }>{ tag.Tag }</option>
				}
			</select>
		</div>
		<div class="form-row">
			<label for="editModifiedValue">Modified Value:</label>
			<input type="text" id="editModifiedValue" name="modifiedValue" placeholder="Specific for customer environment/domain"/>
		</div>
		<div class="form-row" style="display:none;">
			//todo keep invisible?
			<input type="submit" value="Submit"/>
		</div>
	</form>
}

templ propertyList(data []models.PropertyValue) {
	<table id="properties">
		<thead>
			<tr>
				<th>Key</th>
				<th>Description</th>
				<th>Value</th>
			</tr>
		</thead>
		<tbody>
			for _, item := range data {
				<tr tabindex="0" data-id={ strconv.Itoa(item.ID) }>
					<td>{ item.Key }</td>
					if item.Description.Valid {
						<td>{ item.Description.String }</td>
					} else {
						<td></td>
					}
					if item.Value.Valid {
						<td>{ item.Value.String }</td>
					} else {
						<td></td>
					}
				</tr>
			}
		</tbody>
	</table>
}

templ helpScreen() {
	<div id="helpScreen" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0, 0, 0, 0.5);">
		<div style="background:white; margin:10% auto; padding:20px; width:50%;">
			<h2>Keyboard Shortcuts</h2>
			<p><strong>ctrl-f:</strong> go to the "Search for keys" field, to filter out specific property keys, using % wildcards such as in a database.</p>
			<p><strong>n:</strong> Create new record</p>
			<p><strong>e:</strong> Edit selected record</p>
			<p><strong>c:</strong> Recalculate all properties</p>
			<p><strong>?:</strong> Show this help screen</p>
			<p><strong>Escape:</strong> hide Edit form (cfr e/n keys), hide Help screen</p>
			<!-- Add more shortcuts as needed -->
			<button onclick="document.getElementById('helpScreen').style.display='none'">Close</button>
		</div>
	</div>
}
